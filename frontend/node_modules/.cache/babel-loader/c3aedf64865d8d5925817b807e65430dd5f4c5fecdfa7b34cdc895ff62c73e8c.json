{"ast":null,"code":"import toArray from \"rc-util/es/Children/toArray\";\nimport { useMemo } from 'react';\nimport warning from '../../_util/warning';\nfunction getFilledItem(rowItem, rowRestCol, span) {\n  var clone = rowItem;\n  if (span === undefined || span > rowRestCol) {\n    clone = Object.assign(Object.assign({}, rowItem), {\n      span: rowRestCol\n    });\n    process.env.NODE_ENV !== \"production\" ? warning(span === undefined, 'Descriptions', 'Sum of column `span` in a line not match `column` of Descriptions.') : void 0;\n  }\n  return clone;\n}\n// Convert children into items\nvar transChildren2Items = function transChildren2Items(childNodes) {\n  return toArray(childNodes).map(function (node) {\n    return node === null || node === void 0 ? void 0 : node.props;\n  });\n};\n// Calculate the sum of span in a row\nfunction getCalcRows(rowItems, mergedColumn) {\n  var rows = [];\n  var tmpRow = [];\n  var rowRestCol = mergedColumn;\n  rowItems.filter(function (n) {\n    return n;\n  }).forEach(function (rowItem, index) {\n    var span = rowItem === null || rowItem === void 0 ? void 0 : rowItem.span;\n    var mergedSpan = span || 1;\n    // Additional handle last one\n    if (index === rowItems.length - 1) {\n      tmpRow.push(getFilledItem(rowItem, rowRestCol, span));\n      rows.push(tmpRow);\n      return;\n    }\n    if (mergedSpan < rowRestCol) {\n      rowRestCol -= mergedSpan;\n      tmpRow.push(rowItem);\n    } else {\n      tmpRow.push(getFilledItem(rowItem, rowRestCol, mergedSpan));\n      rows.push(tmpRow);\n      rowRestCol = mergedColumn;\n      tmpRow = [];\n    }\n  });\n  return rows;\n}\nvar useRow = function useRow(mergedColumn, items, children) {\n  var rows = useMemo(function () {\n    if (Array.isArray(items)) {\n      return getCalcRows(items, mergedColumn);\n    }\n    return getCalcRows(transChildren2Items(children), mergedColumn);\n  }, [items, children, mergedColumn]);\n  return rows;\n};\nexport default useRow;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}