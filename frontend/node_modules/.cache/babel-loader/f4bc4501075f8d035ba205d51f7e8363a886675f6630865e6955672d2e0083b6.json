{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar initMotionCommon = function initMotionCommon(duration) {\n  return {\n    animationDuration: duration,\n    animationFillMode: 'both'\n  };\n};\n// FIXME: origin less code seems same as initMotionCommon. Maybe we can safe remove\nvar initMotionCommonLeave = function initMotionCommonLeave(duration) {\n  return {\n    animationDuration: duration,\n    animationFillMode: 'both'\n  };\n};\nexport var initMotion = function initMotion(motionCls, inKeyframes, outKeyframes, duration) {\n  var _ref;\n  var sameLevel = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var sameLevelPrefix = sameLevel ? '&' : '';\n  return _ref = {}, _defineProperty(_ref, \"\\n      \".concat(sameLevelPrefix).concat(motionCls, \"-enter,\\n      \").concat(sameLevelPrefix).concat(motionCls, \"-appear\\n    \"), Object.assign(Object.assign({}, initMotionCommon(duration)), {\n    animationPlayState: 'paused'\n  })), _defineProperty(_ref, \"\".concat(sameLevelPrefix).concat(motionCls, \"-leave\"), Object.assign(Object.assign({}, initMotionCommonLeave(duration)), {\n    animationPlayState: 'paused'\n  })), _defineProperty(_ref, \"\\n      \".concat(sameLevelPrefix).concat(motionCls, \"-enter\").concat(motionCls, \"-enter-active,\\n      \").concat(sameLevelPrefix).concat(motionCls, \"-appear\").concat(motionCls, \"-appear-active\\n    \"), {\n    animationName: inKeyframes,\n    animationPlayState: 'running'\n  }), _defineProperty(_ref, \"\".concat(sameLevelPrefix).concat(motionCls, \"-leave\").concat(motionCls, \"-leave-active\"), {\n    animationName: outKeyframes,\n    animationPlayState: 'running',\n    pointerEvents: 'none'\n  }), _ref;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}