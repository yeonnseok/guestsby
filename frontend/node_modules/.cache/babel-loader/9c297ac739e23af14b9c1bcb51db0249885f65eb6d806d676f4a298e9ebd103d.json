{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { resetComponent, textEllipsis } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nvar genBorderedStyle = function genBorderedStyle(token) {\n  var _$concat3;\n  var componentCls = token.componentCls,\n    labelBg = token.labelBg;\n  return _defineProperty({}, \"&\".concat(componentCls, \"-bordered\"), (_$concat3 = {}, _defineProperty(_$concat3, \"\".concat(componentCls, \"-view\"), {\n    border: \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(token.colorSplit),\n    '> table': {\n      tableLayout: 'auto',\n      borderCollapse: 'collapse'\n    }\n  }), _defineProperty(_$concat3, \"\".concat(componentCls, \"-item-label, \").concat(componentCls, \"-item-content\"), {\n    padding: \"\".concat(token.padding, \"px \").concat(token.paddingLG, \"px\"),\n    borderInlineEnd: \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(token.colorSplit),\n    '&:last-child': {\n      borderInlineEnd: 'none'\n    }\n  }), _defineProperty(_$concat3, \"\".concat(componentCls, \"-item-label\"), {\n    color: token.colorTextSecondary,\n    backgroundColor: labelBg,\n    '&::after': {\n      display: 'none'\n    }\n  }), _defineProperty(_$concat3, \"\".concat(componentCls, \"-row\"), {\n    borderBottom: \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(token.colorSplit),\n    '&:last-child': {\n      borderBottom: 'none'\n    }\n  }), _defineProperty(_$concat3, \"&\".concat(componentCls, \"-middle\"), _defineProperty({}, \"\".concat(componentCls, \"-item-label, \").concat(componentCls, \"-item-content\"), {\n    padding: \"\".concat(token.paddingSM, \"px \").concat(token.paddingLG, \"px\")\n  })), _defineProperty(_$concat3, \"&\".concat(componentCls, \"-small\"), _defineProperty({}, \"\".concat(componentCls, \"-item-label, \").concat(componentCls, \"-item-content\"), {\n    padding: \"\".concat(token.paddingXS, \"px \").concat(token.padding, \"px\")\n  })), _$concat3));\n};\nvar genDescriptionStyles = function genDescriptionStyles(token) {\n  var _container, _Object$assign;\n  var componentCls = token.componentCls,\n    extraColor = token.extraColor,\n    itemPaddingBottom = token.itemPaddingBottom,\n    colonMarginRight = token.colonMarginRight,\n    colonMarginLeft = token.colonMarginLeft,\n    titleMarginBottom = token.titleMarginBottom;\n  return _defineProperty({}, componentCls, Object.assign(Object.assign(Object.assign({}, resetComponent(token)), genBorderedStyle(token)), (_Object$assign = {}, _defineProperty(_Object$assign, \"&-rtl\", {\n    direction: 'rtl'\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-header\"), {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: titleMarginBottom\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-title\"), Object.assign(Object.assign({}, textEllipsis), {\n    flex: 'auto',\n    color: token.colorText,\n    fontWeight: token.fontWeightStrong,\n    fontSize: token.fontSizeLG,\n    lineHeight: token.lineHeightLG\n  })), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-extra\"), {\n    marginInlineStart: 'auto',\n    color: extraColor,\n    fontSize: token.fontSize\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-view\"), {\n    width: '100%',\n    borderRadius: token.borderRadiusLG,\n    table: {\n      width: '100%',\n      tableLayout: 'fixed'\n    }\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-row\"), {\n    '> th, > td': {\n      paddingBottom: itemPaddingBottom\n    },\n    '&:last-child': {\n      borderBottom: 'none'\n    }\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-item-label\"), _defineProperty({\n    color: token.colorTextTertiary,\n    fontWeight: 'normal',\n    fontSize: token.fontSize,\n    lineHeight: token.lineHeight,\n    textAlign: \"start\",\n    '&::after': {\n      content: '\":\"',\n      position: 'relative',\n      top: -0.5,\n      marginInline: \"\".concat(colonMarginLeft, \"px \").concat(colonMarginRight, \"px\")\n    }\n  }, \"&\".concat(componentCls, \"-item-no-colon::after\"), {\n    content: '\"\"'\n  })), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-item-no-label\"), {\n    '&::after': {\n      margin: 0,\n      content: '\"\"'\n    }\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-item-content\"), {\n    display: 'table-cell',\n    flex: 1,\n    color: token.colorText,\n    fontSize: token.fontSize,\n    lineHeight: token.lineHeight,\n    wordBreak: 'break-word',\n    overflowWrap: 'break-word'\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-item\"), {\n    paddingBottom: 0,\n    verticalAlign: 'top',\n    '&-container': (_container = {\n      display: 'flex'\n    }, _defineProperty(_container, \"\".concat(componentCls, \"-item-label\"), {\n      display: 'inline-flex',\n      alignItems: 'baseline'\n    }), _defineProperty(_container, \"\".concat(componentCls, \"-item-content\"), {\n      display: 'inline-flex',\n      alignItems: 'baseline'\n    }), _container)\n  }), _defineProperty(_Object$assign, '&-middle', _defineProperty({}, \"\".concat(componentCls, \"-row\"), {\n    '> th, > td': {\n      paddingBottom: token.paddingSM\n    }\n  })), _defineProperty(_Object$assign, '&-small', _defineProperty({}, \"\".concat(componentCls, \"-row\"), {\n    '> th, > td': {\n      paddingBottom: token.paddingXS\n    }\n  })), _Object$assign)));\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Descriptions', function (token) {\n  var descriptionToken = mergeToken(token, {});\n  return [genDescriptionStyles(descriptionToken)];\n}, function (token) {\n  return {\n    labelBg: token.colorFillAlter,\n    titleMarginBottom: token.fontSizeSM * token.lineHeightSM,\n    itemPaddingBottom: token.padding,\n    colonMarginRight: token.marginXS,\n    colonMarginLeft: token.marginXXS / 2,\n    extraColor: token.colorText\n  };\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}