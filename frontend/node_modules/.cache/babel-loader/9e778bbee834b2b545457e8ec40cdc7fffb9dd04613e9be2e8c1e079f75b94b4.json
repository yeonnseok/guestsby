{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { resetComponent } from '../../style';\nimport { genCollapseMotion } from '../../style/motion';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genDraggerStyle from './dragger';\nimport genListStyle from './list';\nimport genMotionStyle from './motion';\nimport { genPictureCardStyle, genPictureStyle } from './picture';\nimport genRtlStyle from './rtl';\nvar genBaseStyle = function genBaseStyle(token) {\n  var _Object$assign;\n  var componentCls = token.componentCls,\n    colorTextDisabled = token.colorTextDisabled;\n  return _defineProperty({}, \"\".concat(componentCls, \"-wrapper\"), Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {}, _defineProperty(_Object$assign, componentCls, {\n    outline: 0,\n    \"input[type='file']\": {\n      cursor: 'pointer'\n    }\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-select\"), {\n    display: 'inline-block'\n  }), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-disabled\"), {\n    color: colorTextDisabled,\n    cursor: 'not-allowed'\n  }), _Object$assign)));\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Upload', function (token) {\n  var fontSizeHeading3 = token.fontSizeHeading3,\n    fontSize = token.fontSize,\n    lineHeight = token.lineHeight,\n    lineWidth = token.lineWidth,\n    controlHeightLG = token.controlHeightLG;\n  var listItemHeightSM = Math.round(fontSize * lineHeight);\n  var uploadToken = mergeToken(token, {\n    uploadThumbnailSize: fontSizeHeading3 * 2,\n    uploadProgressOffset: listItemHeightSM / 2 + lineWidth,\n    uploadPicCardSize: controlHeightLG * 2.55\n  });\n  return [genBaseStyle(uploadToken), genDraggerStyle(uploadToken), genPictureStyle(uploadToken), genPictureCardStyle(uploadToken), genListStyle(uploadToken), genMotionStyle(uploadToken), genRtlStyle(uploadToken), genCollapseMotion(uploadToken)];\n}, function (token) {\n  return {\n    actionsColor: token.colorTextDescription\n  };\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}