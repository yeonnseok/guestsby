{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar genDraggerStyle = function genDraggerStyle(token) {\n  var _$concat2;\n  var componentCls = token.componentCls,\n    iconCls = token.iconCls;\n  return _defineProperty({}, \"\".concat(componentCls, \"-wrapper\"), _defineProperty({}, \"\".concat(componentCls, \"-drag\"), (_$concat2 = {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    textAlign: 'center',\n    background: token.colorFillAlter,\n    border: \"\".concat(token.lineWidth, \"px dashed \").concat(token.colorBorder),\n    borderRadius: token.borderRadiusLG,\n    cursor: 'pointer',\n    transition: \"border-color \".concat(token.motionDurationSlow)\n  }, _defineProperty(_$concat2, componentCls, {\n    padding: \"\".concat(token.padding, \"px 0\")\n  }), _defineProperty(_$concat2, \"\".concat(componentCls, \"-btn\"), {\n    display: 'table',\n    width: '100%',\n    height: '100%',\n    outline: 'none'\n  }), _defineProperty(_$concat2, \"\".concat(componentCls, \"-drag-container\"), {\n    display: 'table-cell',\n    verticalAlign: 'middle'\n  }), _defineProperty(_$concat2, \"&:not(\".concat(componentCls, \"-disabled):hover\"), {\n    borderColor: token.colorPrimaryHover\n  }), _defineProperty(_$concat2, \"p\".concat(componentCls, \"-drag-icon\"), _defineProperty({\n    marginBottom: token.margin\n  }, iconCls, {\n    color: token.colorPrimary,\n    fontSize: token.uploadThumbnailSize\n  })), _defineProperty(_$concat2, \"p\".concat(componentCls, \"-text\"), {\n    margin: \"0 0 \".concat(token.marginXXS, \"px\"),\n    color: token.colorTextHeading,\n    fontSize: token.fontSizeLG\n  }), _defineProperty(_$concat2, \"p\".concat(componentCls, \"-hint\"), {\n    color: token.colorTextDescription,\n    fontSize: token.fontSize\n  }), _defineProperty(_$concat2, \"&\".concat(componentCls, \"-disabled\"), _defineProperty({\n    cursor: 'not-allowed'\n  }, \"p\".concat(componentCls, \"-drag-icon \").concat(iconCls, \",\\n            p\").concat(componentCls, \"-text,\\n            p\").concat(componentCls, \"-hint\\n          \"), {\n    color: token.colorTextDisabled\n  })), _$concat2)));\n};\nexport default genDraggerStyle;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}