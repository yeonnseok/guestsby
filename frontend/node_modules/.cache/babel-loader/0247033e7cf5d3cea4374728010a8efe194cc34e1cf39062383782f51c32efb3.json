{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useTheme;\nvar _useMemo = _interopRequireDefault(require(\"rc-util/lib/hooks/useMemo\"));\nvar _isEqual = _interopRequireDefault(require(\"rc-util/lib/isEqual\"));\nvar _internal = require(\"../../theme/internal\");\nfunction useTheme(theme, parentTheme) {\n  var themeConfig = theme || {};\n  var parentThemeConfig = themeConfig.inherit === false || !parentTheme ? _internal.defaultConfig : parentTheme;\n  return (0, _useMemo[\"default\"])(function () {\n    if (!theme) {\n      return parentTheme;\n    }\n    // Override\n    var mergedComponents = Object.assign({}, parentThemeConfig.components);\n    Object.keys(theme.components || {}).forEach(function (componentName) {\n      mergedComponents[componentName] = Object.assign(Object.assign({}, mergedComponents[componentName]), theme.components[componentName]);\n    });\n    // Base token\n    return Object.assign(Object.assign(Object.assign({}, parentThemeConfig), themeConfig), {\n      token: Object.assign(Object.assign({}, parentThemeConfig.token), themeConfig.token),\n      components: mergedComponents\n    });\n  }, [themeConfig, parentThemeConfig], function (prev, next) {\n    return prev.some(function (prevTheme, index) {\n      var nextTheme = next[index];\n      return !(0, _isEqual[\"default\"])(prevTheme, nextTheme, true);\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}