{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { resetComponent, textEllipsis } from '../../style';\nimport { initMoveMotion, initSlideMotion, slideDownIn, slideDownOut, slideUpIn, slideUpOut } from '../../style/motion';\nvar genItemStyle = function genItemStyle(token) {\n  var controlPaddingHorizontal = token.controlPaddingHorizontal,\n    controlHeight = token.controlHeight,\n    fontSize = token.fontSize,\n    lineHeight = token.lineHeight;\n  return {\n    position: 'relative',\n    display: 'block',\n    minHeight: controlHeight,\n    padding: \"\".concat((controlHeight - fontSize * lineHeight) / 2, \"px \").concat(controlPaddingHorizontal, \"px\"),\n    color: token.colorText,\n    fontWeight: 'normal',\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    boxSizing: 'border-box'\n  };\n};\nvar genSingleStyle = function genSingleStyle(token) {\n  var _disabled, _option, _Object$assign;\n  var antCls = token.antCls,\n    componentCls = token.componentCls;\n  var selectItemCls = \"\".concat(componentCls, \"-item\");\n  var slideUpEnterActive = \"&\".concat(antCls, \"-slide-up-enter\").concat(antCls, \"-slide-up-enter-active\");\n  var slideUpAppearActive = \"&\".concat(antCls, \"-slide-up-appear\").concat(antCls, \"-slide-up-appear-active\");\n  var slideUpLeaveActive = \"&\".concat(antCls, \"-slide-up-leave\").concat(antCls, \"-slide-up-leave-active\");\n  var dropdownPlacementCls = \"\".concat(componentCls, \"-dropdown-placement-\");\n  return [_defineProperty({}, \"\".concat(componentCls, \"-dropdown\"), Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    position: 'absolute',\n    top: -9999,\n    zIndex: token.zIndexPopup,\n    boxSizing: 'border-box',\n    padding: token.paddingXXS,\n    overflow: 'hidden',\n    fontSize: token.fontSize,\n    // Fix select render lag of long text in chrome\n    // https://github.com/ant-design/ant-design/issues/11456\n    // https://github.com/ant-design/ant-design/issues/11843\n    fontVariant: 'initial',\n    backgroundColor: token.colorBgElevated,\n    borderRadius: token.borderRadiusLG,\n    outline: 'none',\n    boxShadow: token.boxShadowSecondary\n  }, _defineProperty(_Object$assign, \"\\n          \".concat(slideUpEnterActive).concat(dropdownPlacementCls, \"bottomLeft,\\n          \").concat(slideUpAppearActive).concat(dropdownPlacementCls, \"bottomLeft\\n        \"), {\n    animationName: slideUpIn\n  }), _defineProperty(_Object$assign, \"\\n          \".concat(slideUpEnterActive).concat(dropdownPlacementCls, \"topLeft,\\n          \").concat(slideUpAppearActive).concat(dropdownPlacementCls, \"topLeft,\\n          \").concat(slideUpEnterActive).concat(dropdownPlacementCls, \"topRight,\\n          \").concat(slideUpAppearActive).concat(dropdownPlacementCls, \"topRight\\n        \"), {\n    animationName: slideDownIn\n  }), _defineProperty(_Object$assign, \"\".concat(slideUpLeaveActive).concat(dropdownPlacementCls, \"bottomLeft\"), {\n    animationName: slideUpOut\n  }), _defineProperty(_Object$assign, \"\\n          \".concat(slideUpLeaveActive).concat(dropdownPlacementCls, \"topLeft,\\n          \").concat(slideUpLeaveActive).concat(dropdownPlacementCls, \"topRight\\n        \"), {\n    animationName: slideDownOut\n  }), _defineProperty(_Object$assign, '&-hidden', {\n    display: 'none'\n  }), _defineProperty(_Object$assign, \"\".concat(selectItemCls), Object.assign(Object.assign({}, genItemStyle(token)), {\n    cursor: 'pointer',\n    transition: \"background \".concat(token.motionDurationSlow, \" ease\"),\n    borderRadius: token.borderRadiusSM,\n    // =========== Group ============\n    '&-group': {\n      color: token.colorTextDescription,\n      fontSize: token.fontSizeSM,\n      cursor: 'default'\n    },\n    // =========== Option ===========\n    '&-option': (_option = {\n      display: 'flex',\n      '&-content': Object.assign({\n        flex: 'auto'\n      }, textEllipsis),\n      '&-state': {\n        flex: 'none',\n        display: 'flex',\n        alignItems: 'center'\n      }\n    }, _defineProperty(_option, \"&-active:not(\".concat(selectItemCls, \"-option-disabled)\"), {\n      backgroundColor: token.controlItemBgHover\n    }), _defineProperty(_option, \"&-selected:not(\".concat(selectItemCls, \"-option-disabled)\"), _defineProperty({\n      color: token.colorText,\n      fontWeight: token.fontWeightStrong,\n      backgroundColor: token.controlItemBgActive\n    }, \"\".concat(selectItemCls, \"-option-state\"), {\n      color: token.colorPrimary\n    })), _defineProperty(_option, '&-disabled', (_disabled = {}, _defineProperty(_disabled, \"&\".concat(selectItemCls, \"-option-selected\"), {\n      backgroundColor: token.colorBgContainerDisabled\n    }), _defineProperty(_disabled, \"color\", token.colorTextDisabled), _defineProperty(_disabled, \"cursor\", 'not-allowed'), _disabled)), _defineProperty(_option, '&-grouped', {\n      paddingInlineStart: token.controlPaddingHorizontal * 2\n    }), _option)\n  })), _defineProperty(_Object$assign, '&-rtl', {\n    direction: 'rtl'\n  }), _Object$assign))),\n  // Follow code may reuse in other components\n  initSlideMotion(token, 'slide-up'), initSlideMotion(token, 'slide-down'), initMoveMotion(token, 'move-up'), initMoveMotion(token, 'move-down')];\n};\nexport default genSingleStyle;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}