{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { resetComponent, resetIcon, textEllipsis } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nvar genTransferCustomizeStyle = function genTransferCustomizeStyle(token) {\n  var _$concat2, _$concat3;\n  var antCls = token.antCls,\n    componentCls = token.componentCls,\n    listHeight = token.listHeight,\n    controlHeightLG = token.controlHeightLG,\n    marginXXS = token.marginXXS,\n    margin = token.margin;\n  var tableCls = \"\".concat(antCls, \"-table\");\n  var inputCls = \"\".concat(antCls, \"-input\");\n  return _defineProperty({}, \"\".concat(componentCls, \"-customize-list\"), (_$concat3 = {}, _defineProperty(_$concat3, \"\".concat(componentCls, \"-list\"), {\n    flex: '1 1 50%',\n    width: 'auto',\n    height: 'auto',\n    minHeight: listHeight\n  }), _defineProperty(_$concat3, \"\".concat(tableCls, \"-wrapper\"), (_$concat2 = {}, _defineProperty(_$concat2, \"\".concat(tableCls, \"-small\"), _defineProperty({\n    border: 0,\n    borderRadius: 0\n  }, \"\".concat(tableCls, \"-selection-column\"), {\n    width: controlHeightLG,\n    minWidth: controlHeightLG\n  })), _defineProperty(_$concat2, \"\".concat(tableCls, \"-pagination\").concat(tableCls, \"-pagination\"), {\n    margin: \"\".concat(margin, \"px 0 \").concat(marginXXS, \"px\")\n  }), _$concat2)), _defineProperty(_$concat3, \"\".concat(inputCls, \"[disabled]\"), {\n    backgroundColor: 'transparent'\n  }), _$concat3));\n};\nvar genTransferStatusColor = function genTransferStatusColor(token, color) {\n  var componentCls = token.componentCls,\n    colorBorder = token.colorBorder;\n  return _defineProperty({}, \"\".concat(componentCls, \"-list\"), {\n    borderColor: color,\n    '&-search:not([disabled])': {\n      borderColor: colorBorder\n    }\n  });\n};\nvar genTransferStatusStyle = function genTransferStatusStyle(token) {\n  var _ref3;\n  var componentCls = token.componentCls;\n  return _ref3 = {}, _defineProperty(_ref3, \"\".concat(componentCls, \"-status-error\"), Object.assign({}, genTransferStatusColor(token, token.colorError))), _defineProperty(_ref3, \"\".concat(componentCls, \"-status-warning\"), Object.assign({}, genTransferStatusColor(token, token.colorWarning))), _ref3;\n};\nvar genTransferListStyle = function genTransferListStyle(token) {\n  var _item;\n  var componentCls = token.componentCls,\n    colorBorder = token.colorBorder,\n    colorSplit = token.colorSplit,\n    lineWidth = token.lineWidth,\n    itemHeight = token.itemHeight,\n    headerHeight = token.headerHeight,\n    transferHeaderVerticalPadding = token.transferHeaderVerticalPadding,\n    itemPaddingBlock = token.itemPaddingBlock,\n    controlItemBgActive = token.controlItemBgActive,\n    colorTextDisabled = token.colorTextDisabled,\n    listHeight = token.listHeight,\n    listWidth = token.listWidth,\n    listWidthLG = token.listWidthLG,\n    fontSizeIcon = token.fontSizeIcon,\n    marginXS = token.marginXS,\n    paddingSM = token.paddingSM,\n    lineType = token.lineType,\n    antCls = token.antCls,\n    iconCls = token.iconCls,\n    motionDurationSlow = token.motionDurationSlow,\n    controlItemBgHover = token.controlItemBgHover,\n    borderRadiusLG = token.borderRadiusLG,\n    colorBgContainer = token.colorBgContainer,\n    colorText = token.colorText,\n    controlItemBgActiveHover = token.controlItemBgActiveHover;\n  return {\n    display: 'flex',\n    flexDirection: 'column',\n    width: listWidth,\n    height: listHeight,\n    border: \"\".concat(lineWidth, \"px \").concat(lineType, \" \").concat(colorBorder),\n    borderRadius: token.borderRadiusLG,\n    '&-with-pagination': {\n      width: listWidthLG,\n      height: 'auto'\n    },\n    '&-search': _defineProperty({}, \"\".concat(iconCls, \"-search\"), {\n      color: colorTextDisabled\n    }),\n    '&-header': {\n      display: 'flex',\n      flex: 'none',\n      alignItems: 'center',\n      height: headerHeight,\n      // border-top is on the transfer dom. We should minus 1px for this\n      padding: \"\".concat(transferHeaderVerticalPadding - lineWidth, \"px \").concat(paddingSM, \"px \").concat(transferHeaderVerticalPadding, \"px\"),\n      color: colorText,\n      background: colorBgContainer,\n      borderBottom: \"\".concat(lineWidth, \"px \").concat(lineType, \" \").concat(colorSplit),\n      borderRadius: \"\".concat(borderRadiusLG, \"px \").concat(borderRadiusLG, \"px 0 0\"),\n      '> *:not(:last-child)': {\n        marginInlineEnd: 4 // This is magic and fixed number, DO NOT use token since it may change.\n      },\n\n      '> *': {\n        flex: 'none'\n      },\n      '&-title': Object.assign(Object.assign({}, textEllipsis), {\n        flex: 'auto',\n        textAlign: 'end'\n      }),\n      '&-dropdown': Object.assign(Object.assign({}, resetIcon()), {\n        fontSize: fontSizeIcon,\n        transform: 'translateY(10%)',\n        cursor: 'pointer',\n        '&[disabled]': {\n          cursor: 'not-allowed'\n        }\n      })\n    },\n    '&-body': {\n      display: 'flex',\n      flex: 'auto',\n      flexDirection: 'column',\n      fontSize: token.fontSize,\n      // https://blog.csdn.net/qq449245884/article/details/107373672/\n      minHeight: 0,\n      '&-search-wrapper': {\n        position: 'relative',\n        flex: 'none',\n        padding: paddingSM\n      }\n    },\n    '&-content': _defineProperty({\n      flex: 'auto',\n      margin: 0,\n      padding: 0,\n      overflow: 'auto',\n      listStyle: 'none',\n      '&-item': (_item = {\n        display: 'flex',\n        alignItems: 'center',\n        minHeight: itemHeight,\n        padding: \"\".concat(itemPaddingBlock, \"px \").concat(paddingSM, \"px\"),\n        transition: \"all \".concat(motionDurationSlow),\n        '> *:not(:last-child)': {\n          marginInlineEnd: marginXS\n        },\n        '> *': {\n          flex: 'none'\n        },\n        '&-text': Object.assign(Object.assign({}, textEllipsis), {\n          flex: 'auto'\n        }),\n        '&-remove': {\n          position: 'relative',\n          color: colorBorder,\n          cursor: 'pointer',\n          transition: \"all \".concat(motionDurationSlow),\n          '&:hover': {\n            color: token.colorLinkHover\n          },\n          '&::after': {\n            position: 'absolute',\n            inset: \"-\".concat(itemPaddingBlock, \"px -50%\"),\n            content: '\"\"'\n          }\n        }\n      }, _defineProperty(_item, \"&:not(\".concat(componentCls, \"-list-content-item-disabled)\"), _defineProperty({\n        '&:hover': {\n          backgroundColor: controlItemBgHover,\n          cursor: 'pointer'\n        }\n      }, \"&\".concat(componentCls, \"-list-content-item-checked:hover\"), {\n        backgroundColor: controlItemBgActiveHover\n      })), _defineProperty(_item, '&-checked', {\n        backgroundColor: controlItemBgActive\n      }), _defineProperty(_item, '&-disabled', {\n        color: colorTextDisabled,\n        cursor: 'not-allowed'\n      }), _item)\n    }, \"&-show-remove \".concat(componentCls, \"-list-content-item:not(\").concat(componentCls, \"-list-content-item-disabled):hover\"), {\n      background: 'transparent',\n      cursor: 'default'\n    }),\n    '&-pagination': _defineProperty({\n      padding: \"\".concat(token.paddingXS, \"px 0\"),\n      textAlign: 'end',\n      borderTop: \"\".concat(lineWidth, \"px \").concat(lineType, \" \").concat(colorSplit)\n    }, \"\".concat(antCls, \"-pagination-options\"), {\n      paddingInlineEnd: token.paddingXS\n    }),\n    '&-body-not-found': {\n      flex: 'none',\n      width: '100%',\n      margin: 'auto 0',\n      color: colorTextDisabled,\n      textAlign: 'center'\n    },\n    '&-footer': {\n      borderTop: \"\".concat(lineWidth, \"px \").concat(lineType, \" \").concat(colorSplit)\n    }\n  };\n};\nvar genTransferStyle = function genTransferStyle(token) {\n  var _Object$assign;\n  var antCls = token.antCls,\n    iconCls = token.iconCls,\n    componentCls = token.componentCls,\n    headerHeight = token.headerHeight,\n    marginXS = token.marginXS,\n    marginXXS = token.marginXXS,\n    fontSizeIcon = token.fontSizeIcon,\n    fontSize = token.fontSize,\n    lineHeight = token.lineHeight,\n    colorBgContainerDisabled = token.colorBgContainerDisabled;\n  return _defineProperty({}, componentCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'stretch'\n  }, _defineProperty(_Object$assign, \"\".concat(componentCls, \"-disabled\"), _defineProperty({}, \"\".concat(componentCls, \"-list\"), {\n    background: colorBgContainerDisabled\n  })), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-list\"), genTransferListStyle(token)), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-operation\"), _defineProperty({\n    display: 'flex',\n    flex: 'none',\n    flexDirection: 'column',\n    alignSelf: 'center',\n    margin: \"0 \".concat(marginXS, \"px\"),\n    verticalAlign: 'middle'\n  }, \"\".concat(antCls, \"-btn\"), _defineProperty({\n    display: 'block',\n    '&:first-child': {\n      marginBottom: marginXXS\n    }\n  }, iconCls, {\n    fontSize: fontSizeIcon\n  }))), _defineProperty(_Object$assign, \"\".concat(antCls, \"-empty-image\"), {\n    maxHeight: headerHeight / 2 - Math.round(fontSize * lineHeight)\n  }), _Object$assign)));\n};\nvar genTransferRTLStyle = function genTransferRTLStyle(token) {\n  var componentCls = token.componentCls;\n  return _defineProperty({}, \"\".concat(componentCls, \"-rtl\"), {\n    direction: 'rtl'\n  });\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Transfer', function (token) {\n  var fontSize = token.fontSize,\n    lineHeight = token.lineHeight,\n    lineWidth = token.lineWidth,\n    controlHeightLG = token.controlHeightLG;\n  var fontHeight = Math.round(fontSize * lineHeight);\n  var transferToken = mergeToken(token, {\n    transferHeaderVerticalPadding: Math.ceil((controlHeightLG - lineWidth - fontHeight) / 2)\n  });\n  return [genTransferStyle(transferToken), genTransferCustomizeStyle(transferToken), genTransferStatusStyle(transferToken), genTransferRTLStyle(transferToken)];\n}, function (token) {\n  var fontSize = token.fontSize,\n    lineHeight = token.lineHeight,\n    controlHeight = token.controlHeight,\n    controlHeightLG = token.controlHeightLG;\n  var fontHeight = Math.round(fontSize * lineHeight);\n  return {\n    listWidth: 180,\n    listHeight: 200,\n    listWidthLG: 250,\n    headerHeight: controlHeightLG,\n    itemHeight: controlHeight,\n    itemPaddingBlock: (controlHeight - fontHeight) / 2\n  };\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}