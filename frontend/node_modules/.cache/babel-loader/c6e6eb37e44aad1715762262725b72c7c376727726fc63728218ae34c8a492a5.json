{"ast":null,"code":"var _jsxFileName = \"/Users/ys.choi/dev/pallete/frontend/src/index.tsx\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport App from './App';\nimport { createRoot } from 'react-dom/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: false\n    },\n    mutations: {\n      useErrorBoundary: false,\n      onSuccess: data => {\n        // user-info인 경우 message를 띄우지 않음\n        if (typeof data === 'object' && 'userName' in data && 'authorities' in data) {\n          return;\n        }\n      },\n      onError: error => {\n        var _data$message;\n        const {\n          status,\n          data\n        } = error.response;\n        if (status === 401) {\n          return;\n        }\n        alert((_data$message = data.message) !== null && _data$message !== void 0 ? _data$message : '요청에 실패했습니다.');\n      }\n    }\n  }\n});\nconst root = createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["BrowserRouter","QueryClient","QueryClientProvider","App","createRoot","jsxDEV","_jsxDEV","queryClient","defaultOptions","queries","refetchOnWindowFocus","retry","mutations","useErrorBoundary","onSuccess","data","onError","error","_data$message","status","response","alert","message","root","document","getElementById","render","children","client","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/ys.choi/dev/pallete/frontend/src/index.tsx"],"sourcesContent":["import { BrowserRouter } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nimport { ErrorResponse } from './common/types';\nimport App from './App';\nimport { createRoot } from 'react-dom/client';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n    mutations: {\n      useErrorBoundary: false,\n      onSuccess: (data) => {\n        // user-info인 경우 message를 띄우지 않음\n        if (typeof data === 'object' && 'userName' in (data as never) && 'authorities' in (data as never)) {\n          return;\n        }\n      },\n      onError: (error) => {\n        const { status, data } = (error as ErrorResponse).response;\n        if (status === 401) {\n          return;\n        }\n        alert(data.message ?? '요청에 실패했습니다.');\n      },\n    },\n  },\n});\n\nconst root = createRoot(document.getElementById('root') as any);\nroot.render(\n  <BrowserRouter>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </BrowserRouter>\n);\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,aAAa;AAG9D,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAG,IAAIN,WAAW,CAAC;EAClCO,cAAc,EAAE;IACdC,OAAO,EAAE;MACPC,oBAAoB,EAAE,KAAK;MAC3BC,KAAK,EAAE;IACT,CAAC;IACDC,SAAS,EAAE;MACTC,gBAAgB,EAAE,KAAK;MACvBC,SAAS,EAAGC,IAAI,IAAK;QACnB;QACA,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,UAAU,IAAKA,IAAc,IAAI,aAAa,IAAKA,IAAc,EAAE;UACjG;QACF;MACF,CAAC;MACDC,OAAO,EAAGC,KAAK,IAAK;QAAA,IAAAC,aAAA;QAClB,MAAM;UAAEC,MAAM;UAAEJ;QAAK,CAAC,GAAIE,KAAK,CAAmBG,QAAQ;QAC1D,IAAID,MAAM,KAAK,GAAG,EAAE;UAClB;QACF;QACAE,KAAK,EAAAH,aAAA,GAACH,IAAI,CAACO,OAAO,cAAAJ,aAAA,cAAAA,aAAA,GAAI,aAAa,CAAC;MACtC;IACF;EACF;AACF,CAAC,CAAC;AAEF,MAAMK,IAAI,GAAGnB,UAAU,CAACoB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAQ,CAAC;AAC/DF,IAAI,CAACG,MAAM,eACTpB,OAAA,CAACN,aAAa;EAAA2B,QAAA,eACZrB,OAAA,CAACJ,mBAAmB;IAAC0B,MAAM,EAAErB,WAAY;IAAAoB,QAAA,eACvCrB,OAAA,CAACH,GAAG;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACT,CACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}