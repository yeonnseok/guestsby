{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar getRTLStyle = function getRTLStyle(_ref) {\n  var _ref2;\n  var componentCls = _ref.componentCls,\n    menuArrowOffset = _ref.menuArrowOffset;\n  return _ref2 = {}, _defineProperty(_ref2, \"\".concat(componentCls, \"-rtl\"), {\n    direction: 'rtl'\n  }), _defineProperty(_ref2, \"\".concat(componentCls, \"-submenu-rtl\"), {\n    transformOrigin: '100% 0'\n  }), _defineProperty(_ref2, \"\".concat(componentCls, \"-rtl\").concat(componentCls, \"-vertical,\\n    \").concat(componentCls, \"-submenu-rtl \").concat(componentCls, \"-vertical\"), _defineProperty({}, \"\".concat(componentCls, \"-submenu-arrow\"), {\n    '&::before': {\n      transform: \"rotate(-45deg) translateY(-\".concat(menuArrowOffset, \")\")\n    },\n    '&::after': {\n      transform: \"rotate(45deg) translateY(\".concat(menuArrowOffset, \")\")\n    }\n  })), _ref2;\n};\nexport default getRTLStyle;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}