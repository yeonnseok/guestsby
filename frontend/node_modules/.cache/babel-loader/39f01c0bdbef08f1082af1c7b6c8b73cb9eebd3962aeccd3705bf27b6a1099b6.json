{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _tinycolor = require(\"@ctrl/tinycolor\");\nfunction isStableColor(color) {\n  return color >= 0 && color <= 255;\n}\nfunction getAlphaColor(frontColor, backgroundColor) {\n  var _tinycolor$TinyColor$ = new _tinycolor.TinyColor(frontColor).toRgb(),\n    fR = _tinycolor$TinyColor$.r,\n    fG = _tinycolor$TinyColor$.g,\n    fB = _tinycolor$TinyColor$.b,\n    originAlpha = _tinycolor$TinyColor$.a;\n  if (originAlpha < 1) {\n    return frontColor;\n  }\n  var _tinycolor$TinyColor$2 = new _tinycolor.TinyColor(backgroundColor).toRgb(),\n    bR = _tinycolor$TinyColor$2.r,\n    bG = _tinycolor$TinyColor$2.g,\n    bB = _tinycolor$TinyColor$2.b;\n  for (var fA = 0.01; fA <= 1; fA += 0.01) {\n    var r = Math.round((fR - bR * (1 - fA)) / fA);\n    var g = Math.round((fG - bG * (1 - fA)) / fA);\n    var b = Math.round((fB - bB * (1 - fA)) / fA);\n    if (isStableColor(r) && isStableColor(g) && isStableColor(b)) {\n      return new _tinycolor.TinyColor({\n        r: r,\n        g: g,\n        b: b,\n        a: Math.round(fA * 100) / 100\n      }).toRgbString();\n    }\n  }\n  // fallback\n  /* istanbul ignore next */\n  return new _tinycolor.TinyColor({\n    r: fR,\n    g: fG,\n    b: fB,\n    a: 1\n  }).toRgbString();\n}\nvar _default = getAlphaColor;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}