{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n/**\n * @private Internal usage only\n */\nexport var getTransBg = function getTransBg(size, colorFill) {\n  return {\n    backgroundImage: \"conic-gradient(\".concat(colorFill, \" 0 25%, transparent 0 50%, \").concat(colorFill, \" 0 75%, transparent 0)\"),\n    backgroundSize: \"\".concat(size, \" \").concat(size)\n  };\n};\nvar genColorBlockStyle = function genColorBlockStyle(token, size) {\n  var componentCls = token.componentCls,\n    borderRadiusSM = token.borderRadiusSM,\n    colorPickerInsetShadow = token.colorPickerInsetShadow,\n    lineWidth = token.lineWidth,\n    colorFillSecondary = token.colorFillSecondary;\n  return _defineProperty({}, \"\".concat(componentCls, \"-color-block\"), Object.assign(Object.assign({\n    position: 'relative',\n    borderRadius: borderRadiusSM,\n    width: size,\n    height: size,\n    boxShadow: colorPickerInsetShadow\n  }, getTransBg('50%', token.colorFillSecondary)), _defineProperty({}, \"\".concat(componentCls, \"-color-block-inner\"), {\n    width: '100%',\n    height: '100%',\n    border: \"\".concat(lineWidth, \"px solid \").concat(colorFillSecondary),\n    borderRadius: 'inherit'\n  })));\n};\nexport default genColorBlockStyle;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}