{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\n// ============================== Styles ==============================\nvar genBaseStyle = function genBaseStyle(token) {\n  var _ref;\n  var componentCls = token.componentCls,\n    lineHeightHeading3 = token.lineHeightHeading3,\n    iconCls = token.iconCls,\n    padding = token.padding,\n    paddingXL = token.paddingXL,\n    paddingXS = token.paddingXS,\n    paddingLG = token.paddingLG,\n    marginXS = token.marginXS,\n    lineHeight = token.lineHeight;\n  return _ref = {}, _defineProperty(_ref, componentCls, {\n    padding: \"\".concat(paddingLG * 2, \"px \").concat(paddingXL, \"px\"),\n    // RTL\n    '&-rtl': {\n      direction: 'rtl'\n    }\n  }), _defineProperty(_ref, \"\".concat(componentCls, \" \").concat(componentCls, \"-image\"), {\n    width: token.imageWidth,\n    height: token.imageHeight,\n    margin: 'auto'\n  }), _defineProperty(_ref, \"\".concat(componentCls, \" \").concat(componentCls, \"-icon\"), _defineProperty({\n    marginBottom: paddingLG,\n    textAlign: 'center'\n  }, \"& > \".concat(iconCls), {\n    fontSize: token.iconFontSize\n  })), _defineProperty(_ref, \"\".concat(componentCls, \" \").concat(componentCls, \"-title\"), {\n    color: token.colorTextHeading,\n    fontSize: token.titleFontSize,\n    lineHeight: lineHeightHeading3,\n    marginBlock: marginXS,\n    textAlign: 'center'\n  }), _defineProperty(_ref, \"\".concat(componentCls, \" \").concat(componentCls, \"-subtitle\"), {\n    color: token.colorTextDescription,\n    fontSize: token.subtitleFontSize,\n    lineHeight: lineHeight,\n    textAlign: 'center'\n  }), _defineProperty(_ref, \"\".concat(componentCls, \" \").concat(componentCls, \"-content\"), {\n    marginTop: paddingLG,\n    padding: \"\".concat(paddingLG, \"px \").concat(padding * 2.5, \"px\"),\n    backgroundColor: token.colorFillAlter\n  }), _defineProperty(_ref, \"\".concat(componentCls, \" \").concat(componentCls, \"-extra\"), {\n    margin: token.extraMargin,\n    textAlign: 'center',\n    '& > *': {\n      marginInlineEnd: paddingXS,\n      '&:last-child': {\n        marginInlineEnd: 0\n      }\n    }\n  }), _ref;\n};\nvar genStatusIconStyle = function genStatusIconStyle(token) {\n  var _ref2;\n  var componentCls = token.componentCls,\n    iconCls = token.iconCls;\n  return _ref2 = {}, _defineProperty(_ref2, \"\".concat(componentCls, \"-success \").concat(componentCls, \"-icon > \").concat(iconCls), {\n    color: token.resultSuccessIconColor\n  }), _defineProperty(_ref2, \"\".concat(componentCls, \"-error \").concat(componentCls, \"-icon > \").concat(iconCls), {\n    color: token.resultErrorIconColor\n  }), _defineProperty(_ref2, \"\".concat(componentCls, \"-info \").concat(componentCls, \"-icon > \").concat(iconCls), {\n    color: token.resultInfoIconColor\n  }), _defineProperty(_ref2, \"\".concat(componentCls, \"-warning \").concat(componentCls, \"-icon > \").concat(iconCls), {\n    color: token.resultWarningIconColor\n  }), _ref2;\n};\nvar genResultStyle = function genResultStyle(token) {\n  return [genBaseStyle(token), genStatusIconStyle(token)];\n};\n// ============================== Export ==============================\nvar getStyle = function getStyle(token) {\n  return genResultStyle(token);\n};\nexport default genComponentStyleHook('Result', function (token) {\n  var resultInfoIconColor = token.colorInfo;\n  var resultErrorIconColor = token.colorError;\n  var resultSuccessIconColor = token.colorSuccess;\n  var resultWarningIconColor = token.colorWarning;\n  var resultToken = mergeToken(token, {\n    resultInfoIconColor: resultInfoIconColor,\n    resultErrorIconColor: resultErrorIconColor,\n    resultSuccessIconColor: resultSuccessIconColor,\n    resultWarningIconColor: resultWarningIconColor,\n    imageWidth: 250,\n    imageHeight: 295\n  });\n  return [getStyle(resultToken)];\n}, function (token) {\n  return {\n    titleFontSize: token.fontSizeHeading3,\n    subtitleFontSize: token.fontSize,\n    iconFontSize: token.fontSizeHeading3 * 3,\n    extraMargin: \"\".concat(token.paddingLG, \"px 0 0 0\")\n  };\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}