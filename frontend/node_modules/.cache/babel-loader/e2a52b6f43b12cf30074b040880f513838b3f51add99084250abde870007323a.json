{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar genStickyStyle = function genStickyStyle(token) {\n  var componentCls = token.componentCls,\n    opacityLoading = token.opacityLoading,\n    tableScrollThumbBg = token.tableScrollThumbBg,\n    tableScrollThumbBgHover = token.tableScrollThumbBgHover,\n    tableScrollThumbSize = token.tableScrollThumbSize,\n    tableScrollBg = token.tableScrollBg,\n    zIndexTableSticky = token.zIndexTableSticky;\n  var tableBorder = \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(token.tableBorderColor);\n  return _defineProperty({}, \"\".concat(componentCls, \"-wrapper\"), _defineProperty({}, \"\".concat(componentCls, \"-sticky\"), {\n    '&-holder': {\n      position: 'sticky',\n      zIndex: zIndexTableSticky,\n      background: token.colorBgContainer\n    },\n    '&-scroll': {\n      position: 'sticky',\n      bottom: 0,\n      height: \"\".concat(tableScrollThumbSize, \"px !important\"),\n      zIndex: zIndexTableSticky,\n      display: 'flex',\n      alignItems: 'center',\n      background: tableScrollBg,\n      borderTop: tableBorder,\n      opacity: opacityLoading,\n      '&:hover': {\n        transformOrigin: 'center bottom'\n      },\n      // fake scrollbar style of sticky\n      '&-bar': {\n        height: tableScrollThumbSize,\n        backgroundColor: tableScrollThumbBg,\n        borderRadius: 100,\n        transition: \"all \".concat(token.motionDurationSlow, \", transform none\"),\n        position: 'absolute',\n        bottom: 0,\n        '&:hover, &-active': {\n          backgroundColor: tableScrollThumbBgHover\n        }\n      }\n    }\n  }));\n};\nexport default genStickyStyle;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}