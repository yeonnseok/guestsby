{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { initMotion } from './motion';\nexport var fadeIn = new Keyframes('antFadeIn', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n});\nexport var fadeOut = new Keyframes('antFadeOut', {\n  '0%': {\n    opacity: 1\n  },\n  '100%': {\n    opacity: 0\n  }\n});\nexport var initFadeMotion = function initFadeMotion(token) {\n  var _ref;\n  var sameLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var antCls = token.antCls;\n  var motionCls = \"\".concat(antCls, \"-fade\");\n  var sameLevelPrefix = sameLevel ? '&' : '';\n  return [initMotion(motionCls, fadeIn, fadeOut, token.motionDurationMid, sameLevel), (_ref = {}, _defineProperty(_ref, \"\\n        \".concat(sameLevelPrefix).concat(motionCls, \"-enter,\\n        \").concat(sameLevelPrefix).concat(motionCls, \"-appear\\n      \"), {\n    opacity: 0,\n    animationTimingFunction: 'linear'\n  }), _defineProperty(_ref, \"\".concat(sameLevelPrefix).concat(motionCls, \"-leave\"), {\n    animationTimingFunction: 'linear'\n  }), _ref)];\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}