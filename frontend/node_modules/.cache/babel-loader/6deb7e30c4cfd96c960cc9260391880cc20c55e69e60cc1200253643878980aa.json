{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar genStepsProgressStyle = function genStepsProgressStyle(token) {\n  var _$concat5;\n  var antCls = token.antCls,\n    componentCls = token.componentCls;\n  return _defineProperty({}, \"&\".concat(componentCls, \"-with-progress\"), (_$concat5 = {}, _defineProperty(_$concat5, \"\".concat(componentCls, \"-item\"), _defineProperty({\n    paddingTop: token.paddingXXS\n  }, \"&-process \".concat(componentCls, \"-item-container \").concat(componentCls, \"-item-icon \").concat(componentCls, \"-icon\"), {\n    color: token.processIconColor\n  })), _defineProperty(_$concat5, \"&\".concat(componentCls, \"-vertical > \").concat(componentCls, \"-item \"), _defineProperty({\n    paddingInlineStart: token.paddingXXS\n  }, \"> \".concat(componentCls, \"-item-container > \").concat(componentCls, \"-item-tail\"), {\n    top: token.marginXXS,\n    insetInlineStart: token.iconSize / 2 - token.lineWidth + token.paddingXXS\n  })), _defineProperty(_$concat5, \"&, &\".concat(componentCls, \"-small\"), _defineProperty({}, \"&\".concat(componentCls, \"-horizontal \").concat(componentCls, \"-item:first-child\"), {\n    paddingBottom: token.paddingXXS,\n    paddingInlineStart: token.paddingXXS\n  })), _defineProperty(_$concat5, \"&\".concat(componentCls, \"-small\").concat(componentCls, \"-vertical > \").concat(componentCls, \"-item > \").concat(componentCls, \"-item-container > \").concat(componentCls, \"-item-tail\"), {\n    insetInlineStart: token.iconSizeSM / 2 - token.lineWidth + token.paddingXXS\n  }), _defineProperty(_$concat5, \"&\".concat(componentCls, \"-label-vertical\"), _defineProperty({}, \"\".concat(componentCls, \"-item \").concat(componentCls, \"-item-tail\"), {\n    top: token.margin - 2 * token.lineWidth\n  })), _defineProperty(_$concat5, \"\".concat(componentCls, \"-item-icon\"), _defineProperty({\n    position: 'relative'\n  }, \"\".concat(antCls, \"-progress\"), {\n    position: 'absolute',\n    insetBlockStart: (token.iconSize - token.stepsProgressSize - token.lineWidth * 2) / 2,\n    insetInlineStart: (token.iconSize - token.stepsProgressSize - token.lineWidth * 2) / 2\n  })), _$concat5));\n};\nexport default genStepsProgressStyle;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}