{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _context = _interopRequireDefault(require(\"./context\"));\nvar _en_US = _interopRequireDefault(require(\"./en_US\"));\nvar useLocale = function useLocale(componentName, defaultLocale) {\n  var fullLocale = React.useContext(_context[\"default\"]);\n  var getLocale = React.useMemo(function () {\n    var _a;\n    var locale = defaultLocale || _en_US[\"default\"][componentName];\n    var localeFromContext = (_a = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return Object.assign(Object.assign({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, fullLocale]);\n  var getLocaleCode = React.useMemo(function () {\n    var localeCode = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if ((fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.exist) && !localeCode) {\n      return _en_US[\"default\"].locale;\n    }\n    return localeCode;\n  }, [fullLocale]);\n  return [getLocale, getLocaleCode];\n};\nvar _default = useLocale;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}