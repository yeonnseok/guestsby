{"ast":null,"code":"\"use strict\";\n'use client';\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"ConfigConsumer\", {\n  enumerable: true,\n  get: function get() {\n    return _context2.ConfigConsumer;\n  }\n});\nObject.defineProperty(exports, \"ConfigContext\", {\n  enumerable: true,\n  get: function get() {\n    return _context2.ConfigContext;\n  }\n});\nexports[\"default\"] = exports.configConsumerProps = void 0;\nObject.defineProperty(exports, \"defaultIconPrefixCls\", {\n  enumerable: true,\n  get: function get() {\n    return _context2.defaultIconPrefixCls;\n  }\n});\nexports.warnContext = exports.globalConfig = exports.defaultPrefixCls = void 0;\nvar _cssinjs = require(\"@ant-design/cssinjs\");\nvar _Context = _interopRequireDefault(require(\"@ant-design/icons/lib/components/Context\"));\nvar _useMemo = _interopRequireDefault(require(\"rc-util/lib/hooks/useMemo\"));\nvar _set = require(\"rc-util/lib/utils/set\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\nvar _validateMessagesContext = _interopRequireDefault(require(\"../form/validateMessagesContext\"));\nvar _locale = _interopRequireWildcard(require(\"../locale\"));\nvar _context = _interopRequireDefault(require(\"../locale/context\"));\nvar _en_US = _interopRequireDefault(require(\"../locale/en_US\"));\nvar _internal = require(\"../theme/internal\");\nvar _seed = _interopRequireDefault(require(\"../theme/themes/seed\"));\nvar _context2 = require(\"./context\");\nvar _cssVariables = require(\"./cssVariables\");\nvar _DisabledContext = require(\"./DisabledContext\");\nvar _useConfig = _interopRequireDefault(require(\"./hooks/useConfig\"));\nvar _useTheme = _interopRequireDefault(require(\"./hooks/useTheme\"));\nvar _MotionWrapper = _interopRequireDefault(require(\"./MotionWrapper\"));\nvar _SizeContext = _interopRequireWildcard(require(\"./SizeContext\"));\nvar _style = _interopRequireDefault(require(\"./style\"));\nvar _context3 = require(\"../theme/context\");\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/**\n * Since too many feedback using static method like `Modal.confirm` not getting theme, we record the\n * theme register info here to help developer get warning info.\n */\nvar existThemeConfig = false;\nvar warnContext = process.env.NODE_ENV !== 'production' ? function (componentName) {\n  process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!existThemeConfig, componentName, \"Static function can not consume context like dynamic theme. Please use 'App' component instead.\") : void 0;\n} : /* istanbul ignore next */\nnull;\nexports.warnContext = warnContext;\nvar configConsumerProps = ['getTargetContainer', 'getPopupContainer', 'rootPrefixCls', 'getPrefixCls', 'renderEmpty', 'csp', 'autoInsertSpaceInButton', 'locale', 'pageHeader'];\n// These props is used by `useContext` directly in sub component\nexports.configConsumerProps = configConsumerProps;\nvar PASSED_PROPS = ['getTargetContainer', 'getPopupContainer', 'renderEmpty', 'pageHeader', 'input', 'pagination', 'form', 'select', 'button'];\nvar defaultPrefixCls = 'ant';\nexports.defaultPrefixCls = defaultPrefixCls;\nvar globalPrefixCls;\nvar globalIconPrefixCls;\nvar globalTheme;\nfunction getGlobalPrefixCls() {\n  return globalPrefixCls || defaultPrefixCls;\n}\nfunction getGlobalIconPrefixCls() {\n  return globalIconPrefixCls || _context2.defaultIconPrefixCls;\n}\nfunction isLegacyTheme(theme) {\n  return Object.keys(theme).some(function (key) {\n    return key.endsWith('Color');\n  });\n}\nvar setGlobalConfig = function setGlobalConfig(_ref) {\n  var prefixCls = _ref.prefixCls,\n    iconPrefixCls = _ref.iconPrefixCls,\n    theme = _ref.theme;\n  if (prefixCls !== undefined) {\n    globalPrefixCls = prefixCls;\n  }\n  if (iconPrefixCls !== undefined) {\n    globalIconPrefixCls = iconPrefixCls;\n  }\n  if (theme) {\n    if (isLegacyTheme(theme)) {\n      process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(false, 'ConfigProvider', '`config` of css variable theme is not work in v5. Please use new `theme` config instead.') : void 0;\n      (0, _cssVariables.registerTheme)(getGlobalPrefixCls(), theme);\n    } else {\n      globalTheme = theme;\n    }\n  }\n};\nvar globalConfig = function globalConfig() {\n  return {\n    getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {\n      if (customizePrefixCls) {\n        return customizePrefixCls;\n      }\n      return suffixCls ? \"\".concat(getGlobalPrefixCls(), \"-\").concat(suffixCls) : getGlobalPrefixCls();\n    },\n    getIconPrefixCls: getGlobalIconPrefixCls,\n    getRootPrefixCls: function getRootPrefixCls() {\n      // If Global prefixCls provided, use this\n      if (globalPrefixCls) {\n        return globalPrefixCls;\n      }\n      // Fallback to default prefixCls\n      return getGlobalPrefixCls();\n    },\n    getTheme: function getTheme() {\n      return globalTheme;\n    }\n  };\n};\nexports.globalConfig = globalConfig;\nvar ProviderChildren = function ProviderChildren(props) {\n  var children = props.children,\n    customCsp = props.csp,\n    autoInsertSpaceInButton = props.autoInsertSpaceInButton,\n    alert = props.alert,\n    anchor = props.anchor,\n    form = props.form,\n    locale = props.locale,\n    componentSize = props.componentSize,\n    direction = props.direction,\n    space = props.space,\n    virtual = props.virtual,\n    dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n    popupMatchSelectWidth = props.popupMatchSelectWidth,\n    popupOverflow = props.popupOverflow,\n    legacyLocale = props.legacyLocale,\n    parentContext = props.parentContext,\n    customIconPrefixCls = props.iconPrefixCls,\n    theme = props.theme,\n    componentDisabled = props.componentDisabled,\n    segmented = props.segmented,\n    statistic = props.statistic,\n    spin = props.spin,\n    calendar = props.calendar,\n    carousel = props.carousel,\n    cascader = props.cascader,\n    collapse = props.collapse,\n    typography = props.typography,\n    checkbox = props.checkbox,\n    descriptions = props.descriptions,\n    divider = props.divider,\n    drawer = props.drawer,\n    skeleton = props.skeleton,\n    steps = props.steps,\n    image = props.image,\n    layout = props.layout,\n    list = props.list,\n    mentions = props.mentions,\n    modal = props.modal,\n    progress = props.progress,\n    result = props.result,\n    slider = props.slider,\n    breadcrumb = props.breadcrumb,\n    menu = props.menu,\n    pagination = props.pagination,\n    input = props.input,\n    empty = props.empty,\n    badge = props.badge,\n    radio = props.radio,\n    rate = props.rate,\n    SWITCH = props[\"switch\"],\n    transfer = props.transfer,\n    avatar = props.avatar,\n    message = props.message,\n    tag = props.tag,\n    table = props.table,\n    card = props.card,\n    tabs = props.tabs,\n    timeline = props.timeline,\n    timePicker = props.timePicker,\n    upload = props.upload,\n    notification = props.notification,\n    tree = props.tree,\n    colorPicker = props.colorPicker,\n    datePicker = props.datePicker,\n    wave = props.wave;\n  // =================================== Warning ===================================\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(dropdownMatchSelectWidth === undefined, 'ConfigProvider', '`dropdownMatchSelectWidth` is deprecated. Please use `popupMatchSelectWidth` instead.') : void 0;\n  }\n  // =================================== Context ===================================\n  var getPrefixCls = React.useCallback(function (suffixCls, customizePrefixCls) {\n    var prefixCls = props.prefixCls;\n    if (customizePrefixCls) {\n      return customizePrefixCls;\n    }\n    var mergedPrefixCls = prefixCls || parentContext.getPrefixCls('');\n    return suffixCls ? \"\".concat(mergedPrefixCls, \"-\").concat(suffixCls) : mergedPrefixCls;\n  }, [parentContext.getPrefixCls, props.prefixCls]);\n  var iconPrefixCls = customIconPrefixCls || parentContext.iconPrefixCls || _context2.defaultIconPrefixCls;\n  var shouldWrapSSR = iconPrefixCls !== parentContext.iconPrefixCls;\n  var csp = customCsp || parentContext.csp;\n  var wrapSSR = (0, _style[\"default\"])(iconPrefixCls, csp);\n  var mergedTheme = (0, _useTheme[\"default\"])(theme, parentContext.theme);\n  if (process.env.NODE_ENV !== 'production') {\n    existThemeConfig = existThemeConfig || !!mergedTheme;\n  }\n  var baseConfig = {\n    csp: csp,\n    autoInsertSpaceInButton: autoInsertSpaceInButton,\n    alert: alert,\n    anchor: anchor,\n    locale: locale || legacyLocale,\n    direction: direction,\n    space: space,\n    virtual: virtual,\n    popupMatchSelectWidth: popupMatchSelectWidth !== null && popupMatchSelectWidth !== void 0 ? popupMatchSelectWidth : dropdownMatchSelectWidth,\n    popupOverflow: popupOverflow,\n    getPrefixCls: getPrefixCls,\n    iconPrefixCls: iconPrefixCls,\n    theme: mergedTheme,\n    segmented: segmented,\n    statistic: statistic,\n    spin: spin,\n    calendar: calendar,\n    carousel: carousel,\n    cascader: cascader,\n    collapse: collapse,\n    typography: typography,\n    checkbox: checkbox,\n    descriptions: descriptions,\n    divider: divider,\n    drawer: drawer,\n    skeleton: skeleton,\n    steps: steps,\n    image: image,\n    input: input,\n    layout: layout,\n    list: list,\n    mentions: mentions,\n    modal: modal,\n    progress: progress,\n    result: result,\n    slider: slider,\n    breadcrumb: breadcrumb,\n    menu: menu,\n    pagination: pagination,\n    empty: empty,\n    badge: badge,\n    radio: radio,\n    rate: rate,\n    \"switch\": SWITCH,\n    transfer: transfer,\n    avatar: avatar,\n    message: message,\n    tag: tag,\n    table: table,\n    card: card,\n    tabs: tabs,\n    timeline: timeline,\n    timePicker: timePicker,\n    upload: upload,\n    notification: notification,\n    tree: tree,\n    colorPicker: colorPicker,\n    datePicker: datePicker,\n    wave: wave\n  };\n  var config = Object.assign({}, parentContext);\n  Object.keys(baseConfig).forEach(function (key) {\n    if (baseConfig[key] !== undefined) {\n      config[key] = baseConfig[key];\n    }\n  });\n  // Pass the props used by `useContext` directly with child component.\n  // These props should merged into `config`.\n  PASSED_PROPS.forEach(function (propName) {\n    var propValue = props[propName];\n    if (propValue) {\n      config[propName] = propValue;\n    }\n  });\n  // https://github.com/ant-design/ant-design/issues/27617\n  var memoedConfig = (0, _useMemo[\"default\"])(function () {\n    return config;\n  }, config, function (prevConfig, currentConfig) {\n    var prevKeys = Object.keys(prevConfig);\n    var currentKeys = Object.keys(currentConfig);\n    return prevKeys.length !== currentKeys.length || prevKeys.some(function (key) {\n      return prevConfig[key] !== currentConfig[key];\n    });\n  });\n  var memoIconContextValue = React.useMemo(function () {\n    return {\n      prefixCls: iconPrefixCls,\n      csp: csp\n    };\n  }, [iconPrefixCls, csp]);\n  var childNode = shouldWrapSSR ? wrapSSR(children) : children;\n  var validateMessages = React.useMemo(function () {\n    var _a, _b, _c, _d;\n    return (0, _set.merge)(((_a = _en_US[\"default\"].Form) === null || _a === void 0 ? void 0 : _a.defaultValidateMessages) || {}, ((_c = (_b = memoedConfig.locale) === null || _b === void 0 ? void 0 : _b.Form) === null || _c === void 0 ? void 0 : _c.defaultValidateMessages) || {}, ((_d = memoedConfig.form) === null || _d === void 0 ? void 0 : _d.validateMessages) || {}, (form === null || form === void 0 ? void 0 : form.validateMessages) || {});\n  }, [memoedConfig, form === null || form === void 0 ? void 0 : form.validateMessages]);\n  if (Object.keys(validateMessages).length > 0) {\n    childNode = /*#__PURE__*/React.createElement(_validateMessagesContext[\"default\"].Provider, {\n      value: validateMessages\n    }, children);\n  }\n  if (locale) {\n    childNode = /*#__PURE__*/React.createElement(_locale[\"default\"], {\n      locale: locale,\n      _ANT_MARK__: _locale.ANT_MARK\n    }, childNode);\n  }\n  if (iconPrefixCls || csp) {\n    childNode = /*#__PURE__*/React.createElement(_Context[\"default\"].Provider, {\n      value: memoIconContextValue\n    }, childNode);\n  }\n  if (componentSize) {\n    childNode = /*#__PURE__*/React.createElement(_SizeContext.SizeContextProvider, {\n      size: componentSize\n    }, childNode);\n  }\n  // =================================== Motion ===================================\n  childNode = /*#__PURE__*/React.createElement(_MotionWrapper[\"default\"], null, childNode);\n  // ================================ Dynamic theme ================================\n  var memoTheme = React.useMemo(function () {\n    var _a = mergedTheme || {},\n      algorithm = _a.algorithm,\n      token = _a.token,\n      components = _a.components,\n      rest = __rest(_a, [\"algorithm\", \"token\", \"components\"]);\n    var themeObj = algorithm && (!Array.isArray(algorithm) || algorithm.length > 0) ? (0, _cssinjs.createTheme)(algorithm) : _context3.defaultTheme;\n    var parsedComponents = {};\n    Object.entries(components || {}).forEach(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        componentName = _ref3[0],\n        componentToken = _ref3[1];\n      var parsedToken = Object.assign({}, componentToken);\n      if ('algorithm' in parsedToken) {\n        if (parsedToken.algorithm === true) {\n          parsedToken.theme = themeObj;\n        } else if (Array.isArray(parsedToken.algorithm) || typeof parsedToken.algorithm === 'function') {\n          parsedToken.theme = (0, _cssinjs.createTheme)(parsedToken.algorithm);\n        }\n        delete parsedToken.algorithm;\n      }\n      parsedComponents[componentName] = parsedToken;\n    });\n    return Object.assign(Object.assign({}, rest), {\n      theme: themeObj,\n      token: Object.assign(Object.assign({}, _seed[\"default\"]), token),\n      components: parsedComponents\n    });\n  }, [mergedTheme]);\n  if (theme) {\n    childNode = /*#__PURE__*/React.createElement(_internal.DesignTokenContext.Provider, {\n      value: memoTheme\n    }, childNode);\n  }\n  // =================================== Render ===================================\n  if (componentDisabled !== undefined) {\n    childNode = /*#__PURE__*/React.createElement(_DisabledContext.DisabledContextProvider, {\n      disabled: componentDisabled\n    }, childNode);\n  }\n  return /*#__PURE__*/React.createElement(_context2.ConfigContext.Provider, {\n    value: memoedConfig\n  }, childNode);\n};\nvar ConfigProvider = function ConfigProvider(props) {\n  var context = React.useContext(_context2.ConfigContext);\n  var antLocale = React.useContext(_context[\"default\"]);\n  return /*#__PURE__*/React.createElement(ProviderChildren, Object.assign({\n    parentContext: context,\n    legacyLocale: antLocale\n  }, props));\n};\nConfigProvider.ConfigContext = _context2.ConfigContext;\nConfigProvider.SizeContext = _SizeContext[\"default\"];\nConfigProvider.config = setGlobalConfig;\nConfigProvider.useConfig = _useConfig[\"default\"];\nObject.defineProperty(ConfigProvider, 'SizeContext', {\n  get: function get() {\n    process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(false, 'ConfigProvider', 'ConfigProvider.SizeContext is deprecated. Please use `ConfigProvider.useConfig().componentSize` instead.') : void 0;\n    return _SizeContext[\"default\"];\n  }\n});\nif (process.env.NODE_ENV !== 'production') {\n  ConfigProvider.displayName = 'ConfigProvider';\n}\nvar _default = ConfigProvider;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}