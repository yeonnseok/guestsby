{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar genSizeStyle = function genSizeStyle(token) {\n  var componentCls = token.componentCls;\n  var getSizeStyle = function getSizeStyle(size, paddingVertical, paddingHorizontal, fontSize) {\n    var _$concat$concat$conca;\n    return _defineProperty({}, \"\".concat(componentCls).concat(componentCls, \"-\").concat(size), (_$concat$concat$conca = {\n      fontSize: fontSize\n    }, _defineProperty(_$concat$concat$conca, \"\\n        \".concat(componentCls, \"-title,\\n        \").concat(componentCls, \"-footer,\\n        \").concat(componentCls, \"-thead > tr > th,\\n        \").concat(componentCls, \"-tbody > tr > th,\\n        \").concat(componentCls, \"-tbody > tr > td,\\n        tfoot > tr > th,\\n        tfoot > tr > td\\n      \"), {\n      padding: \"\".concat(paddingVertical, \"px \").concat(paddingHorizontal, \"px\")\n    }), _defineProperty(_$concat$concat$conca, \"\".concat(componentCls, \"-filter-trigger\"), {\n      marginInlineEnd: \"-\".concat(paddingHorizontal / 2, \"px\")\n    }), _defineProperty(_$concat$concat$conca, \"\".concat(componentCls, \"-expanded-row-fixed\"), {\n      margin: \"-\".concat(paddingVertical, \"px -\").concat(paddingHorizontal, \"px\")\n    }), _defineProperty(_$concat$concat$conca, \"\".concat(componentCls, \"-tbody\"), _defineProperty({}, \"\".concat(componentCls, \"-wrapper:only-child \").concat(componentCls), {\n      marginBlock: \"-\".concat(paddingVertical, \"px\"),\n      marginInline: \"\".concat(token.tableExpandColumnWidth - paddingHorizontal, \"px -\").concat(paddingHorizontal, \"px\")\n    })), _defineProperty(_$concat$concat$conca, \"\".concat(componentCls, \"-selection-column\"), {\n      paddingInlineStart: \"\".concat(paddingHorizontal / 4, \"px\")\n    }), _$concat$concat$conca));\n  };\n  return _defineProperty({}, \"\".concat(componentCls, \"-wrapper\"), Object.assign(Object.assign({}, getSizeStyle('middle', token.tablePaddingVerticalMiddle, token.tablePaddingHorizontalMiddle, token.tableFontSizeMiddle)), getSizeStyle('small', token.tablePaddingVerticalSmall, token.tablePaddingHorizontalSmall, token.tableFontSizeSmall)));\n};\nexport default genSizeStyle;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}